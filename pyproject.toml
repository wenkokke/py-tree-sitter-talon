[build-system]
requires = [
  "setuptools>=45",
  "importlib_resources >=5.12,<6",
  "packaging >=23.1,<25"
]
build-backend = "setuptools.build_meta"

[project]
name = "tree_sitter_talon"
description = "Parser for Talon files in Python."
license = { file = 'LICENSE' }
dynamic = ["version"]
authors = [{ name = "Wen Kokke", email = "wenkokke@users.noreply.github.com" }]
readme = "README.md"
keywords = ["parser", "tree-sitter", "talon"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.8,<3.13"
dependencies = [
  "tree_sitter ==0.21.3",
  "tree_sitter_type_provider >=2.2.0,<3",
  "dataclasses_json >=0.5.7,<0.7",
  "parsec >=3.15,<4",
  "importlib_resources >=5.12,<6"
]

[project.optional-dependencies]
mypy = ["types_setuptools"]
test = [
  "bumpver",
  "mypy >=1.1.1,<2",
  "pytest >=7.1.2,<9",
  "pytest_golden >=0.2.2,<0.3",
]
docs = ["Sphinx >=5.1.1,<8", "sphinx_bootstrap_theme >=0.8.1,<0.9"]

[tool.bumpver]
# NOTE: This package uses a version in two parts. The epoch is the major
#       version number of the underlying tree_sitter_talon grammar, the
#       remaining two numbers are a ComVer version, where the first number
#       is bumped if compatibility is broken, and the second number is bumped
#       if it isn't. In SemVer terms, the first two numbers are major numbers,
#       the third number is a minor number.
current_version = "v3!1.7"
version_pattern = "vMAJOR!MINOR.PATCH"
#                   ^^^^^ - epoch version
#                         ^^^^^ - major/minor version
#                               ^^^^^ - patch version
#
# TODO: Use "vEPOCH!MAJOR.MINOR" once BumpVer supports EPOCH version numbers.
#       See: https://github.com/mbarkhau/bumpver/issues/208#issuecomment-1552154064
commit_message = "Bump build number {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['^current_version = "{version}"$']
"src/tree_sitter_talon/_version.py" = [
  '^VERSION: str = f"{TREE_SITTER_TALON_VERSION.major}!MINOR.PATCH"$'
]

[tool.cibuildwheel]
build-frontend = "build"
skip = [
  # 18-04-2023:
  # PyPy builds do not work.
  "pp*",
]
test-command = "pytest {package}/tests"
test-extras = "test"

[tool.cibuildwheel.macos]
archs = ["x86_64", "universal2", "arm64"]

[tool.mypy]
mypy_path = "src"
python_version = "3.8"
strict = true
implicit_reexport = false
ignore_missing_imports = true
warn_unused_ignores = false
exclude = ["^src/tree_sitter_talon._tree_sitter_talon"]

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
addopts = "--ignore=tests/data"
testpaths = ["tests"]

[tool.setuptools.dynamic]
version = { attr = "tree_sitter_talon._version.VERSION" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.pyi"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312, docs
isolated_build = true

[testenv]
pass_env =
  PYTEST_ARGS
extras =
  test
commands =
  {envpython} -m bumpver update --patch --dry --no-fetch
  {envpython} -m pytest tests -x {env:PYTEST_ARGS}
  {envpython} -m mypy.stubtest --mypy-config-file=pyproject.toml --ignore-unused-allowlist --allowlist=.stubtest-allowlist.{envname}.csv tree_sitter_talon

[testenv:docs]
requires =
  py311
extras =
  docs
commands =
  sphinx-build -M html docs docs/_build
"""
