[build-system]
requires = ["setuptools>=45"]
build-backend = "setuptools.build_meta"

[project]
name = "tree_sitter_talon"
version = "1007.3.2.0"
description = "Parser for Talon files in Python."
license = { file = 'LICENSE' }
authors = [{ name = "Wen Kokke", email = "wenkokke@users.noreply.github.com" }]
readme = "README.md"
keywords = ["parser", "tree-sitter", "talon"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.7.1,<3.12"
dependencies = [
  "tree_sitter >=0.20,<0.21",
  "tree_sitter_type_provider >=2.1.18,<2.2",
  "dataclasses_json >=0.5.7,<0.6",
  "parsec >=3.15,<4",
  "importlib-resources >=5.12,<6"
]

[project.optional-dependencies]
mypy = [
  "types_setuptools",
]
test = [
  "bumpver",
  "mypy >=1.1.1,<2",
  "pytest >=7.1.2,<8",
  "pytest_golden >=0.2.2,<0.3",
]
docs = ["Sphinx >=5.1.1,<7", "sphinx_bootstrap_theme >=0.8.1,<0.9"]

[tool.bumpver]
current_version = "1007"
version_pattern = "BUILD"
commit_message = "Bump build number {old_version} -> {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  '^version = "{version}.3.2.0"$',
  '^current_version = "{version}"$',
]
"src/tree_sitter_talon/_internal/__init__.py" = [
  '^__version__: str = "{version}.3.2.0"$'
]
"docs/conf.py" = ['^release = "{version}.3.2.0"$']

[tool.cibuildwheel]
build-frontend = "build"
skip = [
  # 18-04-2023:
  # PyPy builds do not work.
  "pp*",
]
test-command = "pytest {package}/tests"
test-extras = "test"

[tool.mypy]
python_version = 3.7
check_untyped_defs = true
strict_optional = true
strict_concatenate = true
strict_equality = true
implicit_reexport = false
ignore_missing_imports = true
warn_incomplete_stub = false
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
addopts = "--ignore=tests/data"
testpaths = ["tests"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311
isolated_build = true
skip_missing_interpreters = true

[testenv]
extras =
  test
commands =
  {envpython} -m bumpver update --dry --no-fetch
  {envpython} -m pytest tests -x
  {envpython} -m mypy.stubtest --mypy-config-file=pyproject.toml --ignore-unused-allowlist --allowlist=.stubtest-allowlist.{envname}.csv tree_sitter_talon
"""
